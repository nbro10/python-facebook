{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Python-Facebook's documentation!","text":"<p>A Python wrapper around for Facebook Graph API.</p> <p>Author: IkarosKun merle.liukun@gmail.com</p>"},{"location":"#introduction","title":"Introduction","text":"<p>The Graph API is the primary way for apps to read and write to the Facebook social graph. </p> <p>This library provides a Python interface for the Facebook Graph API. Library could work on Python 3.6+</p> <p>Python 2.7</p> <p>According to plan, v0.9.x series will be the last to support Python 2.7.</p>"},{"location":"CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p>"},{"location":"CHANGELOG/#0180-2023-11-10","title":"0.18.0 (2023-11-10)","text":""},{"location":"CHANGELOG/#feat","title":"Feat","text":"<ul> <li>Add v18.0 support.</li> <li>Add support for instagram new insight metrics</li> <li>Add deprecation tip for Server-Sent-Event API.</li> </ul>"},{"location":"CHANGELOG/#deprecations","title":"Deprecations","text":"<ul> <li>Remove outdate versions [<code>v10.0</code>, <code>v11.0</code>]</li> <li>Server-Sent Events are deprecated and will be removed December 31, 2023.</li> </ul>"},{"location":"CHANGELOG/#0171-2023-09-22","title":"0.17.1 (2023-09-22)","text":""},{"location":"CHANGELOG/#fix","title":"Fix","text":"<ul> <li>Add support for new rate limit parameter</li> </ul>"},{"location":"CHANGELOG/#0170-2023-08-07","title":"0.17.0 (2023-08-07)","text":""},{"location":"CHANGELOG/#feat_1","title":"Feat","text":"<ul> <li>Add v16.0 support.</li> <li>Add v17.0 support.</li> <li>Add more resource support for facebook.</li> </ul>"},{"location":"CHANGELOG/#0150-2022-09-26","title":"0.15.0 (2022-09-26)","text":""},{"location":"CHANGELOG/#feat_2","title":"Feat","text":"<ul> <li>Add v15.0 support.</li> </ul>"},{"location":"CHANGELOG/#deprecations_1","title":"Deprecations","text":"<ul> <li>Remove version <code>v7.0</code> support.</li> </ul>"},{"location":"CHANGELOG/#0145-2022-09-02","title":"0.14.5 (2022-09-02)","text":""},{"location":"CHANGELOG/#feat_3","title":"Feat","text":"<ul> <li>Add simple support for facebook server sent events api.</li> <li>Make <code>scopes</code> work well in auth flow.</li> </ul>"},{"location":"CHANGELOG/#0143-2022-08-17","title":"0.14.3 (2022-08-17)","text":""},{"location":"CHANGELOG/#fixs","title":"Fixs","text":"<ul> <li>Fix model repr if a post not have message</li> </ul>"},{"location":"CHANGELOG/#0142-2022-07-22","title":"0.14.2 (2022-07-22)","text":""},{"location":"CHANGELOG/#features","title":"Features","text":"<ul> <li>Support reels for Instagram Business Account.</li> <li>Support product tagging apis for Instagram Business Account.</li> </ul>"},{"location":"CHANGELOG/#0141-2022-06-28","title":"0.14.1 (2022-06-28)","text":""},{"location":"CHANGELOG/#features_1","title":"Features","text":"<ul> <li>Support more url config in init api.</li> <li>Remove version check to make version for support pre version.</li> </ul>"},{"location":"CHANGELOG/#0140-2022-06-01","title":"0.14.0 (2022-06-01)","text":""},{"location":"CHANGELOG/#features_2","title":"Features","text":"<ul> <li>Add version <code>v14.0</code> support.</li> <li>Add some examples for library.</li> </ul>"},{"location":"CHANGELOG/#deprecations_2","title":"Deprecations","text":"<ul> <li>Remove version <code>v6.0</code> support.</li> </ul>"},{"location":"CHANGELOG/#0131-2022-03-15","title":"0.13.1 (2022-03-15)","text":""},{"location":"CHANGELOG/#fix_1","title":"Fix","text":"<ul> <li>Fix version for <code>v13.0</code> in check, thanks for @pietzschke and @pobk.</li> </ul>"},{"location":"CHANGELOG/#0130-2022-02-15","title":"0.13.0 (2022-02-15)","text":""},{"location":"CHANGELOG/#features_3","title":"Features","text":"<ul> <li>Add version <code>v13.0</code> support.</li> <li>Update actions for project</li> </ul>"},{"location":"CHANGELOG/#deprecations_3","title":"Deprecations","text":"<ul> <li>Remove version <code>v5.0</code> support.</li> </ul>"},{"location":"CHANGELOG/#0124-2021-12-03","title":"0.12.4 (2021-12-03)","text":"<ul> <li>Remove v4.0 support.</li> <li>Update docs for usage.</li> <li>Add new changes for instagram business.</li> </ul>"},{"location":"CHANGELOG/#0123-2021-10-28","title":"0.12.3 (2021-10-28)","text":"<ul> <li>Fix the rate limit not working.</li> </ul>"},{"location":"CHANGELOG/#0122-2021-10-28","title":"0.12.2 (2021-10-28)","text":"<ul> <li>Update for exception.</li> </ul>"},{"location":"CHANGELOG/#0121-2021-10-27","title":"0.12.1 (2021-10-27)","text":"<ul> <li>Add api to discover instagram user media to <code>GraphAPI</code>.</li> <li>Add parameters for discover instagram user media</li> </ul>"},{"location":"CHANGELOG/#0120-2021-10-21","title":"0.12.0 (2021-10-21)","text":"<ul> <li>Add api for business object.</li> <li>Add api for search pages.</li> <li>Support new graph version <code>v12.0</code>.</li> <li>Update for new <code>from</code> field for ig business comment.</li> <li>Add tests for <code>Python 3.10</code>.</li> </ul>"},{"location":"CHANGELOG/#0112-2021-09-02","title":"0.11.2 (2021-09-02)","text":"<ul> <li>GraphAPI for post and delete object.</li> <li>Add application apis.</li> <li>Remove Api version v3.3</li> </ul>"},{"location":"CHANGELOG/#0111-2021-08-23","title":"0.11.1 (2021-08-23)","text":"<ul> <li>New structure for Facebook Graph API</li> <li>New structure for Instagram Graph API</li> <li>New structure for Instagram Basic Display API</li> </ul>"},{"location":"CHANGELOG/#0100-2021-07-07","title":"0.10.0 (2021-07-07)","text":""},{"location":"CHANGELOG/#features_4","title":"Features","text":"<ul> <li>New structure for Graph API.</li> </ul>"},{"location":"CHANGELOG/#broken-change","title":"Broken Change","text":"<ul> <li>Remove python2 support.</li> <li>Refactor all methods.</li> </ul>"},{"location":"CHANGELOG/#095-2021-09-02","title":"0.9.5 (2021-09-02)","text":""},{"location":"CHANGELOG/#features_5","title":"Features","text":"<ul> <li>Add follower field for page</li> <li>Remove Api version v3.3</li> </ul>"},{"location":"CHANGELOG/#093-2021-04-28","title":"0.9.3 (2021-04-28)","text":""},{"location":"CHANGELOG/#features_6","title":"Features","text":"<ul> <li>Update API version to V11.0</li> <li>Add parameters <code>since</code> and <code>until</code> for instaram media api.</li> </ul>"},{"location":"CHANGELOG/#broken-change_1","title":"Broken Change","text":"<ul> <li>Replace IgProApi <code>get_user_medias</code> method parameter <code>since_time</code> and <code>until_time</code> With <code>since</code> and <code>until</code>.</li> </ul>"},{"location":"CHANGELOG/#092-2021-04-28","title":"0.9.2 (2021-04-28)","text":""},{"location":"CHANGELOG/#features_7","title":"Features","text":"<ul> <li>error update</li> </ul>"},{"location":"CHANGELOG/#091-2021-04-27","title":"0.9.1 (2021-04-27)","text":""},{"location":"CHANGELOG/#features_8","title":"Features","text":"<ul> <li>Add new fields for IG,FB</li> <li>New docs</li> </ul>"},{"location":"CHANGELOG/#fix_2","title":"Fix","text":"<ul> <li>version bug  #107</li> </ul>"},{"location":"CHANGELOG/#090-2021-03-16","title":"0.9.0 (2021-03-16)","text":""},{"location":"CHANGELOG/#features_9","title":"Features","text":"<ul> <li>Upgrade api to v10.0</li> <li>Instagram business publish content</li> </ul>"},{"location":"CHANGELOG/#081-2021-02-08","title":"0.8.1 (2021-02-08)","text":""},{"location":"CHANGELOG/#features_10","title":"Features","text":"<ul> <li>Upgrade api to v9.0</li> </ul>"},{"location":"CHANGELOG/#fix_3","title":"Fix","text":"<ul> <li>Bugs for #91 #93</li> </ul>"},{"location":"CHANGELOG/#080-2021-01-17","title":"0.8.0 (2021-01-17)","text":""},{"location":"CHANGELOG/#features_11","title":"Features","text":"<ul> <li>Add new api for live videos</li> </ul>"},{"location":"CHANGELOG/#fix_4","title":"Fix","text":"<ul> <li>Bug for lost children fields for check params. thanks for @stevenviola</li> </ul>"},{"location":"CHANGELOG/#072-2020-11-11","title":"0.7.2 (2020-11-11)","text":""},{"location":"CHANGELOG/#features_12","title":"Features","text":"<ul> <li>Add new api for story, tags for IG.</li> <li>Modify Facebook OAuth flow method.</li> <li>Add support for Python 3.9.</li> </ul>"},{"location":"CHANGELOG/#070-2020-09-13","title":"0.7.0 (2020-09-13)","text":""},{"location":"CHANGELOG/#features_13","title":"Features","text":"<ul> <li>Add new api for video,album and photos for facebook.</li> <li>Update to support for to Graph API V8.0    </li> </ul>"},{"location":"CHANGELOG/#061-2020-04-02","title":"0.6.1 (2020-04-02)","text":""},{"location":"CHANGELOG/#features_14","title":"Features","text":"<ul> <li>Introduce simple sleep in requests to avoid reach the limit quickly.</li> </ul>"},{"location":"CHANGELOG/#060-2020-03-12","title":"0.6.0 (2020-03-12)","text":""},{"location":"CHANGELOG/#features_15","title":"Features","text":"<ul> <li>Introduce new methods for <code>Instagram Basic Display Api</code>.</li> </ul>"},{"location":"CHANGELOG/#055-2020-02-24","title":"0.5.5 (2020-02-24)","text":""},{"location":"CHANGELOG/#features_16","title":"Features","text":"<ul> <li>Introduce <code>instagram</code> business account mentions api.</li> <li>Add <code>facebook</code> post subattachments field.</li> </ul>"},{"location":"CHANGELOG/#054-2020-02-14","title":"0.5.4 (2020-02-14)","text":""},{"location":"CHANGELOG/#features_17","title":"Features","text":"<ul> <li>Introduce <code>instagram</code> business account insights api.</li> <li>Introduce <code>instagram</code> business account hashtag api.</li> </ul> <p>Simple usage at GET DATA.</p>"},{"location":"CHANGELOG/#053-2020-01-05","title":"0.5.3 (2020-01-05)","text":""},{"location":"CHANGELOG/#broken-change_2","title":"Broken Change","text":"<ul> <li>Now we refactor all api for this library.</li> </ul> <p>You can see the README to see the changes.</p>"},{"location":"CHANGELOG/#052-2019-11-13","title":"0.5.2 (2019-11-13)","text":""},{"location":"CHANGELOG/#features_18","title":"Features","text":"<ul> <li>facebook:  add global_brand_page_name fields in page (34700f2)</li> <li>facebook:  add page default picture return. (6c8f9ff)</li> </ul>"},{"location":"CHANGELOG/#051-2019-10-23","title":"0.5.1 (2019-10-23)","text":""},{"location":"CHANGELOG/#features_19","title":"Features","text":"<ul> <li> <p>instagram:  instagram owner data api. (ad9fb89)</p> </li> <li> <p>Instagram API has refactored. (26b75ac)</p> </li> </ul>"},{"location":"installation/","title":"Installation","text":"<p>This library supports Python 3.6 and newer.</p>"},{"location":"installation/#dependencies","title":"Dependencies","text":"<p>These distributions will be installed automatically when installing Python-Facebook-Api.</p> <ul> <li>requests: An elegant and simple HTTP library for Python, built for human beings.</li> <li>Requests-OAuthlib: A library uses the Python Requests and OAuthlib libraries to provide an easy-to-use Python interface for building OAuth1 and OAuth2 clients.</li> </ul>"},{"location":"installation/#installation","title":"Installation","text":"<p>You can install this library from PyPI.</p> <pre><code>~ pip install --upgrade python-facebook-api\n</code></pre> <p>Also, you can build this library from source code.</p> <pre><code>git clone https://github.com/sns-sdks/python-facebook.git\ncd python-facebook\nmake env\nmake build\n</code></pre>"},{"location":"installation/#testing","title":"Testing","text":"<p>If you have installed the requirements use <code>make env</code>.</p> <p>You can use following command to test the code.</p> <pre><code>make test\n</code></pre>"},{"location":"previous-version/readme/","title":"README","text":"<p>This is the docs for the previous version series <code>0.9.x</code>.</p>"},{"location":"previous-version/usage_en/","title":"usage-en","text":"<p>      Python Facebook         A Python wrapper for the Facebook Common API. </p> <p> </p>"},{"location":"previous-version/usage_en/#thanks","title":"THANKS","text":"<p>Inspired by Python-Twitter.</p>"},{"location":"previous-version/usage_en/#introduction","title":"Introduction","text":"<p>Library provides a service to easily use Facebook Graph API.</p> <p>It currently includes the use of <code>Facebook</code>,  <code>Instagram Business</code>, and <code>Instagram Basic Display</code> product data.</p>"},{"location":"previous-version/usage_en/#installing","title":"Installing","text":"<p>You can install this library from <code>pypi</code></p> <pre><code>$ pip install --upgrade python-facebook-api\n# \u2728\ud83c\udf70\u2728\n</code></pre>"},{"location":"previous-version/usage_en/#documentation","title":"Documentation","text":"<p>You can view the latest <code>python-facebook</code> documentation at: https://sns-sdks.github.io/python-facebook/</p> <p>Also view the full <code>Facebook Graph API</code> docs at: https://developers.facebook.com/docs/graph-api/</p> <p>And full <code>Instagram Graph API</code> docs at: https://developers.facebook.com/docs/instagram-api/</p> <p>And full <code>Instagram Basic Display API</code> docs at: https://developers.facebook.com/docs/instagram-basic-display-api/</p>"},{"location":"previous-version/usage_en/#facebook-graph-api","title":"Facebook Graph API","text":"<p>The API is exposed via the `pyfacebook.Api`` class.</p> <p>To get data, you need to have a facebook app first. You can get more information about create, apply permissions for app at App docs.</p> <p>Also, you can get some examples for this library at Example folder.</p>"},{"location":"previous-version/usage_en/#initial-api","title":"Initial Api","text":"<p>Facebook has different types of access tokens. You can use different access tokens to get different data.</p> <ol> <li>User Access Token</li> <li>App Access Token</li> <li>Page Access Token</li> <li>Client Token (library not support)</li> </ol> <p>You can see the docs Access-Token to get more information.</p> <p>If you want to get user access token by authorize. You can follow the docs Authorization-Manually to initial the api.</p> <p>If you just want to use app access token to get some public data. You can initial an api as follows.</p> <pre><code>api = Api(app_id=\"your app id\", app_secret=\"your app secret\", application_only_auth=True)\napi.get_token_info()\n# AccessToken(app_id='id', application='app name', user_id=None)\n</code></pre> <p>If you have a short-lived token you can initial an api as follows.</p> <pre><code>api = Api(app_id=\"your app id\", app_secret=\"your app secret\", short_token=\"short-lived token\")\napi.get_token_info()\n# AccessToken(app_id='id', application='app name', user_id='token user id')\n</code></pre> <p>If you have a long term token you can initial an api as follows (Just provide only <code>long_term_token</code> parameter enough. but for security need provide with app credentials).</p> <pre><code>api = Api(app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-term token\")\napi.get_token_info()\n# AccessToken(app_id='id', application='app name', user_id='token user id')\n# this need token have additional manage_pages permission.\napi = Api(long_term_token=\"long-term token\")\n</code></pre> <p>the difference between initialize with parameter <code>short_token</code> or <code>long_term_token</code> is that short token will auto exchange a long term token inside.</p> <p>Facebook rate limit is very vague, it is related to the number of users of your app. So the library provides the custom sleep times in requests. You can only set parameter <code>sleep_on_rate_limit</code> with <code>True</code> to let api sleep two seconds between two requests. Or you can set parameter <code>sleep_seconds_mapping</code> with a dict that contains your custom data. ex:</p> <pre><code>mapping = {10: 2, 20: 5, 50: 20, 70: 30}  # key is api limit reached percent and value is seconds to sleep.\napi = Api(\n    app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-term token\",\n    sleep_on_rate_limit=True, sleep_seconds_mapping=mapping\n)\n</code></pre>"},{"location":"previous-version/usage_en/#get-data","title":"Get Data","text":"<p>You can get a facebook page information by the following methods.</p> <p>To fetch one facebook page's public data:</p> <pre><code>api.get_page_info(username='facebookapp')\n# Page(id='20531316728', name='Facebook', username='facebookapp')\n</code></pre> <p>To fetch multi pages by one request, you can pass the page username list or page id list with the <code>ids</code> parameter as follows.</p> <pre><code>api.get_pages_info(ids=[\"20531316728\", \"nba\"])\n# {'20531316728': Page(id='20531316728', name='Facebook', username='facebookapp'), 'nba': Page(id='8245623462', name='NBA', username='nba')}\n</code></pre> <p>There are multiple methods to retrieve one page's posts data.</p> <pre><code>api.get_page_feeds()\napi.get_page_posts()\napi.get_page_published_posts()\napi.get_page_tagged_posts()\n</code></pre> <p>Page feeds can get feed of posts (including status updates) and links published by this page, or by others on this page. You can call with the following:</p> <pre><code>api.get_page_feeds(page_id=\"20531316728\", count=2)\n# [Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'),\n#    Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')]\n</code></pre> <p>Page posts can only get the posts that were published by this page:</p> <pre><code>api.get_page_posts(page_id=\"20531316728\", count=2)\n# [Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'), \n#   Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')]\n</code></pre> <p>Because of facebook graph api limit Page Feed . Using public token can only get approximately 600 ranked, published posts per year.</p> <p>So if you want to get all of a page's posts or posts which tagged the page. you need use method <code>get_page_published_posts</code>, and this needs a page's access token with permission <code>manage_pages</code>.</p> <p>You can use authorization to get that page access token. Just follows docs Authorization-Manually. Then you can get all published posts:</p> <pre><code>api.get_published_posts(username='facebookapp', access_token='page access token')\n# [Post...]\n</code></pre> <p>You can get tagged posts:</p> <pre><code>api.get_tagged_posts(username='facebookapp', access_token='page access token')\n# [Post...]\n</code></pre> <p>If you also have the post id, you can get post detail info by the following methods.</p> <p>To fetch a post info:</p> <pre><code>api.get_post_info(post_id=\"20531316728_587455038708591\")\n# Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/')\n</code></pre> <p>To fetch multi posts by one requests:</p> <pre><code>api.get_posts_info(ids=[\"20531316728_587455038708591\", \"20531316728_10159023836696729\"])\n# {'20531316728_587455038708591': Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'),\n#    '20531316728_10159023836696729': Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')}\n</code></pre> <p>You can get comments data by the object(post, page and so on) id:</p> <pre><code>api.get_comments_by_object(object_id=\"20531316728_587455038708591\", count=2)\n# ([Comment(id='587455038708591_587460942041334', can_like=True, can_comment=True, comment_count=2, like_count=1),\n#    Comment(id='587455038708591_587464298707665', can_like=True, can_comment=True, comment_count=2, like_count=14)],\n#    CommentSummary(total_count=392, can_comment=True))\n</code></pre> <p>If you already have the comment id, you can get comment details info with the following methods.</p> <p>To fetch one comment info:</p> <pre><code>api.get_comment_info(comment_id=\"587455038708591_587460942041334\")\n# Comment(id='587455038708591_587460942041334', comment_count=2, like_count=1)\n</code></pre> <p>To fetch multi comment info by one request:</p> <pre><code>api.get_comments_info(ids=[\"587455038708591_587460942041334\", \"587455038708591_587464298707665\"])\n# {'587455038708591_587460942041334': Comment(id='587455038708591_587460942041334', comment_count=2, like_count=1),\n#  '587455038708591_587464298707665': Comment(id='587455038708591_587464298707665', comment_count=2, like_count=14)}\n</code></pre> <p>You can get the page's profile picture by the following methods.</p> <p>To fetch a page picture:</p> <pre><code>api.get_picture(page_id=\"20531316728\")\n# ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/58978526_10158354585751729_7411073224387067904_o.png?_nc_cat=1&amp;_nc_oc=AQmaFO7eND-DVRoArrQLUZVDpmemw8nMPmHJWvoCyXId_MKLLHQdsS8UbTOX4oaEfeQ&amp;_nc_ht=scontent.xx&amp;oh=128f57c4dc65608993af62b562d92d84&amp;oe=5E942420', height=100, width=100)\n</code></pre> <p>To fetch multi pages picture:</p> <pre><code>api.get_pictures(ids=[\"20531316728\", \"nba\"])\n# {'20531316728': ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/58978526_10158354585751729_7411073224387067904_o.png?_nc_cat=1&amp;_nc_oc=AQmaFO7eND-DVRoArrQLUZVDpmemw8nMPmHJWvoCyXId_MKLLHQdsS8UbTOX4oaEfeQ&amp;_nc_ht=scontent.xx&amp;oh=128f57c4dc65608993af62b562d92d84&amp;oe=5E942420', height=100, width=100),\n#  'nba': ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/81204460_10158199356848463_5727214464013434880_n.jpg?_nc_cat=1&amp;_nc_oc=AQmcent57E-a-923C_VVpiX26nGqKDodImY1gsiu7h1czDmcpLHXR8D5hIh9g9Ao3wY&amp;_nc_ht=scontent.xx&amp;oh=1656771e6c11bd03147b69ee643238ba&amp;oe=5E66450C', height=100, width=100)}\n</code></pre> <p>You can get videos data by the object(page, user...) id:</p> <pre><code>api.get_videos_by_object(\"ikaroskunlife\", fields=[\"id\", \"title\", \"description\"], count=None, limit=20)\n# [Video(id='969222676905304', created_time=None, description='\u51ac\u65e5'),\n#  Video(id='210174653594254', created_time=None, description='Snowing'),\n#  Video(id='674270653053120', created_time=None, description='Visible')]\n</code></pre> <p>If you already have the id of videos, you can get more info by the following methods:</p> <pre><code>api.get_video_info(\"969222676905304\")\n# Video(id='969222676905304', created_time='2020-09-12T09:53:06+0000', description='\u51ac\u65e5')\napi.get_videos(ids=[\"210174653594254\", \"674270653053120\"])\n# {'210174653594254': Video(id='210174653594254', created_time='2020-03-31T08:13:14+0000', description='Snowing'),\n#  '674270653053120': Video(id='674270653053120', created_time='2019-09-02T06:13:17+0000', description='Visible')}\n</code></pre> <p>You can get albums data by the object(page, user...) id:</p> <pre><code>api.get_albums_by_object(\"instagram\", count=20, limit=15)\n# [Album(id='372558296163354', created_time='2012-10-29T19:46:35+0000', name='\u65f6\u95f4\u7ebf\u7167\u7247'),\n#  Album(id='623202484432266', created_time='2014-04-12T15:28:26+0000', name='\u624b\u673a\u4e0a\u4f20')...]\n</code></pre> <p>If you already have the id of album, you can get more info by the following methods:</p> <pre><code>api.get_album_info(\"372558296163354\")\n# Album(id='372558296163354', created_time='2012-10-29T19:46:35+0000', name='\u65f6\u95f4\u7ebf\u7167\u7247')\napi.get_albums(ids=\"372558296163354,623202484432266\")\n# {'372558296163354': Album(id='372558296163354', created_time='2012-10-29T19:46:35+0000', name='\u65f6\u95f4\u7ebf\u7167\u7247'),\n#  '623202484432266': Album(id='623202484432266', created_time='2014-04-12T15:28:26+0000', name='\u624b\u673a\u4e0a\u4f20')}\n</code></pre> <p>You can get photos data by the object(page, album, user...) id:</p> <pre><code>api.get_photos_by_object(\"372558296163354\", count=10, limit=5)\n# [Photo(id='3293405020745319', created_time='2020-09-10T19:11:01+0000', name='Roller skating = Black joy for Travis Reynolds. \ud83d\udda4\\n\\nWatch our IGTV to catch some good vibes and see his \ud83d\udd25\ud83d\udd25\ud83d\udd25 tricks. \\n\\n#ShareBlackStories\\n\\nhttps://www.instagram.com/tv/CE9xgF3jwS_/'),\n#  Photo(id='3279789248773563', created_time='2020-09-06T16:23:17+0000', name='#HelloFrom Los Glaciares National Park, Argentina \ud83d\udc4f\ud83d\udc4f\ud83d\udc4f\\n\\nhttps://www.instagram.com/p/CEzSoQNMdfH/'),\n#  Photo(id='3276650595754095', created_time='2020-09-05T16:52:54+0000', name=None)...]\n</code></pre> <p>If you already have the id of photos, you can get more info by the following methods:</p> <pre><code>api.get_photo_info(\"3293405020745319\")\n# Photo(id='3293405020745319', created_time='2020-09-10T19:11:01+0000', name='Roller skating = Black joy for Travis Reynolds. \ud83d\udda4\\n\\nWatch our IGTV to catch some good vibes and see his \ud83d\udd25\ud83d\udd25\ud83d\udd25 tricks. \\n\\n#ShareBlackStories\\n\\nhttps://www.instagram.com/tv/CE9xgF3jwS_/')\napi.get_photos(ids=[\"3279789248773563\", \"3276650595754095\"])\n# {'3279789248773563': Photo(id='3279789248773563', created_time='2020-09-06T16:23:17+0000', name='#HelloFrom Los Glaciares National Park, Argentina \ud83d\udc4f\ud83d\udc4f\ud83d\udc4f\\n\\nhttps://www.instagram.com/p/CEzSoQNMdfH/'),\n# '3276650595754095': Photo(id='3276650595754095', created_time='2020-09-05T16:52:54+0000', name=None)}\n</code></pre> <p>You can get live videos' data by the object(page, user...) id:</p> <pre><code>api.get_live_videos_by_object(object_id=\"2121008874780932\", limit=10, count=2)\n# [LiveVideo(id='2814245952123884', permalink_url='/IkaroskunLife/videos/710393869909608/'),\n#  LiveVideo(id='2809188389296307', permalink_url='/IkaroskunLife/videos/706216360286730/')]\n</code></pre> <p>If you already have the id of live videos, you can get more info by the following methods:</p> <pre><code>api.get_live_video_info(live_video_id=\"2814245952123884\")\n# LiveVideo(id='2814245952123884', permalink_url='/IkaroskunLife/videos/710393869909608/')\n</code></pre> <p>Same as get live video input stream data.</p>"},{"location":"previous-version/usage_en/#instagram-graph-api","title":"Instagram Graph API","text":"<p>Instagram Graph API allows you to get instagram Professional accounts data.</p>"},{"location":"previous-version/usage_en/#initial-api_1","title":"Initial Api","text":"<p>As similar to facebook graph api. This api can be initialized by multiple methods. But can only use user access token, and needs your instagram business id.</p> <p>If you want to get user access token by authorize. You can follow the docs Authorization-Manually to initialize the api.</p> <p>If you have a short-lived token you can initialize an api as follows:</p> <pre><code>api = IgProApi(app_id=\"your app id\", app_secret=\"your app secret\", short_token=\"short-lived token\",\n               instagram_business_id=\"17841406338772941\")\napi.get_token_info()\n# AccessToken(app_id='id', application='app name', user_id=\"token user id\")\n</code></pre> <p>If you have a long term token you can initialize an api as follows (Just providing only <code>long_term_token</code> parameter is enough, but for security you need to provide app credentials):</p> <pre><code>api = IgProApi(app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-lived token\")\napi.get_token_info()\n# AccessToken(app_id='id', application='app name', user_id='token user id')\n</code></pre>"},{"location":"previous-version/usage_en/#get-data_1","title":"Get Data","text":"<p>If you want to search other's business account basic info and medias. You can use methods as follows:</p> <ul> <li>discovery_user: retrieve user basic data</li> <li>discovery_user_medias: retrieve user medias data</li> </ul> <p>Note</p> <p>Use discovery only support search by instagram username.</p> <p>Retrieve other user info by username:</p> <pre><code>api.discovery_user(username=\"facebook\")\n# IgProUser(id='17841400455970028', name='Facebook', username='facebook')\n</code></pre> <p>Retrieve other user medias by username:</p> <pre><code>api.discovery_user_medias(username=\"facebook\", count=2)\n# [IgProMedia(comments=None, id='17859633232647524', permalink='https://www.instagram.com/p/B6jje2UnoH8/'),\n#  IgProMedia(comments=None, id='18076151185161297', permalink='https://www.instagram.com/p/B6ji-PZH2V1/')]\n</code></pre> <p>Get your account info:</p> <pre><code>api.get_user_info(user_id=\"your instagram business id\")\n# IgProUser(id='17841406338772941', name='LiuKun', username='ikroskun')\n</code></pre> <p>Get your medias:</p> <pre><code>api.get_user_medias(user_id=api.instagram_business_id, count=2)\n# [IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/'),\n#  IgProMedia(comments=None, id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')]\n</code></pre> <p>If you already have some medias id, you can get media info by the following methods.</p> <p>To fetch a post info:</p> <pre><code>api.get_media_info(media_id=\"18075344632131157\")\n# IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/')\n</code></pre> <p>To fetch multi medias by one requests:</p> <pre><code>api.get_medias_info(media_ids=[\"18075344632131157\", \"18027939643230671\"])\n# {'18075344632131157': IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/'),\n#  '18027939643230671': IgProMedia(comments=None, id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')}\n</code></pre> <p>Get comments for media:</p> <pre><code>api.get_comments_by_media(media_id=\"17955956875141196\", count=2)\n# [IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000'),\n#  IgProComment(id='17844360649889631', timestamp='2020-01-05T05:58:42+0000')]\n</code></pre> <p>If you already have some comments' id, you can get comment details info by the following methods.</p> <p>To fetch a comment info:</p> <pre><code>api.get_comment_info(comment_id=\"17862949873623188\")\n# IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000')\n</code></pre> <p>To fetch multi comments by one requests:</p> <pre><code>api.get_comments_info(comment_ids=[\"17862949873623188\", \"17844360649889631\"])\n# {'17862949873623188': IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000'),\n#  '17844360649889631': IgProComment(id='17844360649889631', timestamp='2020-01-05T05:58:42+0000')}\n</code></pre> <p>Get replies for a comments:</p> <pre><code>api.get_replies_by_comment(\"17984127178281340\", count=2)\n# [IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000'),\n#  IgProReply(id='17846106427692294', timestamp='2019-10-15T07:05:17+0000')]\n</code></pre> <p>If you already have some replies' id, you can get replies details info by the following methods.</p> <p>To fetch a reply info:</p> <pre><code>api.get_reply_info(reply_id=\"18107567341036926\")\n# IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000')\n</code></pre> <p>To fetch multi replies info by one requests:</p> <pre><code>api.get_replies_info(reply_ids=[\"18107567341036926\", \"17846106427692294\"])\n# {'18107567341036926': IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000'),\n#  '17846106427692294': IgProReply(id='17846106427692294', timestamp='2019-10-15T07:05:17+0000')}\n</code></pre> <p>Use <code>get_user_insights</code> method, you can get account insights data.</p> <p>If you want to get your account insights, just provide <code>user_id</code> with your id.</p> <p>If you have other account's access token, you can provide with <code>user_id</code> and <code>access_token</code>:</p> <pre><code>api.get_user_insights(user_id=api.instagram_business_id, period=\"day\", metrics=[\"impressions\", \"reach\"])\n# [IgProInsight(name='impressions', period='day'), IgProInsight(name='reach', period='day')]\n</code></pre> <p>The same as <code>get_user_insights</code>, you can custom provide <code>media_id</code> and <code>access_token</code>.</p> <p>Get your media insights data:</p> <pre><code>api.get_media_insights(media_id=\"media_id\", metrics=[\"engagement\", \"impressions\"])\n# [IgProInsight(name='engagement', period='lifetime'), IgProInsight(name='impressions', period='lifetime')]\n</code></pre> <p>Get hashtag id:</p> <pre><code>api.search_hashtag(q=\"love\")\n# [IgProHashtag(id='17843826142012701', name=None)]\n</code></pre> <p>Get hashtag info:</p> <pre><code>api.get_hashtag_info(hashtag_id=\"17843826142012701\")\n# IgProHashtag(id='17843826142012701', name='love')\n</code></pre> <p>Get hashtag's top medias:</p> <pre><code>api.get_hashtag_top_medias(hashtag_id=\"17843826142012701\", count=5)\n# [IgProMedia(comments=None, id='18086291068155608', permalink='https://www.instagram.com/p/B8ielBPpHaw/'),\n#  IgProMedia(comments=None, id='17935250359346228', permalink='https://www.instagram.com/p/B8icUmwoF0Y/'),\n#  IgProMedia(comments=None, id='17847031435934181', permalink='https://www.instagram.com/p/B8icycxKEn-/'),\n#  IgProMedia(comments=None, id='18000940699302502', permalink='https://www.instagram.com/p/B8ieNN7Cv6S/'),\n#  IgProMedia(comments=None, id='18025516372248793', permalink='https://www.instagram.com/p/B8iduQJgSyO/')]\n</code></pre> <p>Get hashtag's recent medias:</p> <pre><code>api.get_hashtag_recent_medias(hashtag_id=\"17843826142012701\", count=5)\n# [IgProMedia(comments=None, id='18128248021002097', permalink='https://www.instagram.com/p/B8ifnoWA5Ru/'),\n#  IgProMedia(comments=None, id='18104579776105272', permalink='https://www.instagram.com/p/B8ifwfsgBw2/'),\n#  IgProMedia(comments=None, id='17898846532442427', permalink='https://www.instagram.com/p/B8ifwZ4ltqP/'),\n#  IgProMedia(comments=None, id='17891698510462453', permalink='https://www.instagram.com/p/B8ifwepgf_E/'),\n#  IgProMedia(comments=None, id='17883544606492965', permalink='https://www.instagram.com/p/B8ifwabgiPf/')]\n</code></pre> <p>If you have other account's access token, you can provide it with <code>user_id</code> and <code>access_token</code> to get its search hashtags. Or just get your account recent searched hashtags:</p> <pre><code>api.get_user_recently_searched_hashtags(user_id=\"17841406338772941\")\n# [IgProHashtag(id='17843826142012701', name='love'), IgProHashtag(id='17841562447105233', name='loveyou')]\n</code></pre> <p>Get the media objects in which a Business or Creator Account has been tagged. If you have another account authorized access token, you can provide it with <code>user_id</code> and <code>access_token</code> to get its data. Or only get your account's data:</p> <pre><code>medias = api.get_tagged_user_medias(user_id=api.instagram_business_id, count=2, limit=5)\n# [IgProMedia(id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/'),\n#  IgProMedia(id='17846368219941692', permalink='https://www.instagram.com/p/B8gQCApHMT-/')]\n</code></pre> <p>Get data about a comment that a Business or Creator Account has been @mentioned in comment text:</p> <pre><code>api.get_mentioned_comment_info(user_id=api.instagram_business_id, comment_id=\"17892250648466172\")\n# IgProComment(id='17892250648466172', timestamp='2020-02-24T09:15:16+0000')\n</code></pre> <p>Get data about a media object on which a Business or Creator Account has been @mentioned in a caption::</p> <pre><code>api.get_mentioned_media_info(user_id=api.instagram_business_id, media_id=\"18027939643230671\")\n# IgProMedia(id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')\n</code></pre> <p>Now you can publish instagram content if your app have published permission.</p> <p>for publish, you need create a container first, the make the container publish.</p> <pre><code># create photo\napi.create_photo(\n    image_url=\"https://www.example.com/images/gugges.jpg\",\n    caption=\"publish test\",\n    location_id=\"7640348500\",\n    user_tags='[{\"username\": \"somebody\", \"x\": 0.5, \"y\": 0.8}]'\n)\n# IgProContainer(id='17877174857201040', status_code=None)\n\n# create video\napi.create_video(\n    video_url=\"https://www.example.com/videos/hungry-fonzes.mov\",\n    caption=\"video test\",\n    location_id=\"\",\n    thumb_offset=5,\n)\n# IgProContainer(id='17877174857201041', status_code=None)\n</code></pre> <p>Then you can get container status, if container is ready, You can make it published.</p> <pre><code>api.get_container_info(container_id=\"17877174857201040\")\n# IgProContainer(id='17877174857201040', status_code='FINISHED')\n</code></pre> <p>Then you can publish it.</p> <pre><code>api.publish_container(creation_id=\"17877174857201040\")\n# {'id': '17892354025952911'}\n</code></pre> <p>If success, will return the media id.</p> <p>For now, Instagram accounts are limited to 25 API-published posts within a 24 hours moving period.</p> <p>So you can get current limit info.</p> <pre><code>api.get_publish_limit()\n# IgProPublishLimit(quota_usage=4)\n</code></pre>"},{"location":"previous-version/usage_en/#instagram-basic-api","title":"Instagram Basic API","text":"<p>Instagram Basic Display API can be used to access any type of Instagram account but only provides read-access to basic data.</p> <p>You need to authorize first, and get access token which has permission to retrieve data.</p> <p>All docs on Basic Display API.</p>"},{"location":"previous-version/usage_en/#initial-api_2","title":"Initial Api","text":"<p>Now provide three methods to init api.</p> <p>If you have long-lived access token, can just initial by token:</p> <pre><code>from pyfacebook import IgBasicApi\n\napi = IgBasicApi(long_term_token=\"token\")\n</code></pre> <p>If you have short-lived access token, can provide with app credentials:</p> <pre><code>api = IgBasicApi(app_id=\"app id\", app_secret=\"app secret\", short_token=\"token\")\n</code></pre> <p>If you want to authorized by user on hand. You can use authorize flow:</p> <pre><code>api = IgBasicApi(app_id=\"app id\", app_secret=\"app secret\", initial_access_token=False)\napi.get_authorization_url()\n# ('https://api.instagram.com/oauth/authorize?response_type=code&amp;client_id=app+id&amp;redirect_uri=https%3A%2F%2Flocalhost%2F&amp;scope=user_profile+user_media&amp;state=PyFacebook', 'PyFacebook')\n# give permission and copy the redirect full url.\napi.exchange_access_token(response=\"the full url\")\n</code></pre>"},{"location":"previous-version/usage_en/#get-data_2","title":"Get Data","text":"<p>You can get user basic info:</p> <pre><code>api.get_user_info()\n# IgBasicUser(id='17841406338772941', username='ikroskun')\n</code></pre> <p>You can get user medias:</p> <pre><code>api.get_user_medias()\n# [IgBasicMedia(id='17846368219941692', media_type='IMAGE', permalink='https://www.instagram.com/p/B8gQCApHMT-/'),\n#  IgBasicMedia(id='17970645226046242', media_type='IMAGE', permalink='https://www.instagram.com/p/Bme0cU1giOH/')]\n</code></pre> <p>You can get just one media info:</p> <pre><code>api.get_media_info(media_id=\"18027939643230671\")\n# IgBasicMedia(id='18027939643230671', media_type='CAROUSEL_ALBUM', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')\n</code></pre>"},{"location":"previous-version/usage_en/#support","title":"SUPPORT","text":"<p><code>python-facebook-api</code> had been being developed with Pycharm under the free JetBrains Open Source license(s) granted by JetBrains s.r.o., hence I would like to express my thanks here.</p> <p></p>"},{"location":"previous-version/usage_en/#todo","title":"TODO","text":""},{"location":"previous-version/usage_en/#now-features","title":"Now features","text":"<p>Facebook Api:</p> <ul> <li>Page Info.</li> <li>Page Picture Info.</li> <li>Feed Info (public posts, published posts, tagged posts).</li> <li>Comment Info.</li> <li>Video Info.</li> <li>Album Info.</li> <li>Photo Info.</li> <li>Live Video Info.</li> </ul> <p>Instagram Professional Api:</p> <ul> <li>Other business account info and media.</li> <li>Authorized business account info</li> <li>Authorized account medias</li> <li>Authorized account comments</li> <li>Authorized account replies</li> <li>Authorized account insights and media insights</li> <li>Search hashtag id</li> <li>Get hashtag info</li> <li>Get top medias with hashtag</li> <li>Get recent medias with hashtag</li> <li>Get Authorized account recent searched hashtags</li> <li>Get medias which tagged account</li> <li>Get comment info mentioned user.</li> <li>Get media info mentioned user.</li> <li>Publish Content</li> </ul> <p>Instagram Basic display api:</p> <ul> <li>Get user info</li> <li>Get user medias</li> <li>Get media info</li> </ul>"},{"location":"previous-version/usage_en/#todo_1","title":"TODO","text":"<ul> <li>publish</li> </ul>"},{"location":"previous-version/usage_zh/","title":"\u57fa\u7840\u6559\u7a0b","text":"<p>      Python Facebook         \u4f7f\u7528 `Python` \u5c01\u88c5\u7684 `Facebook` \u5e73\u53f0\u4e0b\u7684\u4e00\u4e9b\u6570\u636e\u63a5\u53e3. </p> <p> </p>"},{"location":"previous-version/usage_zh/#_1","title":"\u81f4\u8c22","text":"<p>\u7075\u611f\u6765\u81ea Python-Twitter.</p>"},{"location":"previous-version/usage_zh/#_2","title":"\u8bf4\u660e","text":"<p>\u8be5\u5e93\u63d0\u4f9b\u4e00\u79cd\u66f4\u52a0\u7b80\u5355\u7684\u65b9\u5f0f\u53bb\u4f7f\u7528 <code>Facebook</code> \u5e73\u53f0\u7684\u6570\u636e\u63a5\u53e3\u3002 \u6ce8\u610f\uff0c\u5f53\u4f60\u4f7f\u7528\u65f6\uff0c\u7531\u4e8e\u4e00\u4e9b\u539f\u56e0\uff0c\u9700\u8981\u5728\u5916\u7f51\u73af\u5883\u4e0b\u624d\u53ef\u4ee5\u4f7f\u7528\u3002</p> <p>\u76ee\u524d\u5305\u62ec\u4e86 <code>Facebook</code>, <code>Instagram Business</code>, <code>Instagram Basic Display</code> \u4ea7\u54c1\u6570\u636e\u7684\u4f7f\u7528\u3002</p>"},{"location":"previous-version/usage_zh/#_3","title":"\u5b89\u88c5","text":"<p>\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 <code>pip</code> \u6765\u5b89\u88c5\u8fd9\u4e2a\u5305\u5566:</p> <pre><code>$ pip install --upgrade python-facebook-api\n# \u2728\ud83c\udf70\u2728\n</code></pre>"},{"location":"previous-version/usage_zh/#_4","title":"\u6587\u6863","text":"<p>\u4f60\u53ef\u4ee5\u8bbf\u95ee: https://sns-sdks.github.io/python-facebook/ \u53bb\u67e5\u770b\u76f8\u5173\u6587\u6863 (Doing).</p> <p>\u6d89\u53ca\u7684 <code>Facebook Graph API</code> \u4f60\u90fd\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee: https://developers.facebook.com/docs/graph-api/ \u53bb\u67e5\u770b \u6d89\u53ca\u7684 <code>Instagram Graph API</code> \u4f60\u90fd\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee: https://developers.facebook.com/docs/instagram-api/ \u53bb\u67e5\u770b \u6d89\u53ca\u7684 <code>Instagram Basic Display API</code> \u4f60\u90fd\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee: https://developers.facebook.com/docs/instagram-basic-display-api/ \u53bb\u67e5\u770b</p>"},{"location":"previous-version/usage_zh/#facebook-graph-api","title":"Facebook Graph API","text":"<p>API \u901a\u8fc7 <code>pyfacebook.Api</code> \u7c7b\u516c\u5f00\u8bbf\u95ee\u3002</p> <p>\u4e3a\u4e86\u83b7\u53d6\u5bf9\u5e94\u7684\u6570\u636e\uff0c\u4f60\u9996\u5148\u9700\u8981\u4e00\u4e2a Facebook App\u3002 \u4f60\u53ef\u4ee5\u8bbf\u95ee App docs \u53bb\u83b7\u53d6\u66f4\u591a\u5173\u4e8e\u5982\u4f55\u521b\u5efa App \u548c \u5982\u4f55\u4e3a App \u7533\u8bf7\u76f8\u5173\u7684\u6743\u9650\u7684\u4fe1\u606f\u3002</p> <p>\u53e6\u5916\uff0c\u4f60\u53ef\u4ee5\u5728 Example folder \u4e2d\u67e5\u770b\u4e00\u4e9b\u7b80\u5355\u7684\u4f8b\u5b50</p>"},{"location":"previous-version/usage_zh/#api","title":"\u521d\u59cb\u5316 API","text":"<p>Facebook \u5b58\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u8bbf\u95ee\u53e3\u4ee4\u3002\u4f7f\u7528\u4e0d\u540c\u7684\u8bbf\u95ee\u53e3\u4ee4\u53ef\u4ee5\u83b7\u53d6\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002</p> <ol> <li>\u7528\u6237\u8bbf\u95ee\u53e3\u4ee4</li> <li>\u5e94\u7528\u8bbf\u95ee\u53e3\u4ee4</li> <li>\u4e3b\u9875\u8bbf\u95ee\u53e3\u4ee4</li> <li>\u5ba2\u6237\u7aef\u8bbf\u95ee\u53e3\u4ee4 (\u7531\u4e8e\u7528\u5230\u8be5\u53e3\u4ee4\u7684\u5730\u65b9\u5f88\u5c11\uff0c\u6b64\u5e93\u4e0d\u63d0\u4f9b)</li> </ol> <p>\u4f60\u53ef\u4ee5\u9605\u8bfb\u6709\u5173 Access-Token \u7684\u6587\u6863\u53bb\u83b7\u53d6\u66f4\u591a\u7684\u4fe1\u606f\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8981\u901a\u8fc7\u7528\u6237\u8fdb\u884c\u6388\u6743\u6765\u83b7\u53d6\u7528\u6237\u7684\u8bbf\u95ee\u53e3\u4ee4\uff0c\u4f60\u53ef\u4ee5\u6309\u7167 \u624b\u52a8\u6388\u6743 \u7684\u6587\u6863\u6765\u521d\u59cb\u5316 <code>Api</code>\u3002</p> <p>\u5982\u679c\u4f60\u53ea\u662f\u60f3\u901a\u8fc7\u5e94\u7528\u8bbf\u95ee\u53e3\u4ee4\u6765\u83b7\u53d6\u4e00\u4e9b\u516c\u5f00\u6570\u636e\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u521d\u59cb\u5316 <code>Api</code>:</p> <pre><code>api = Api(app_id=\"your app id\", app_secret=\"your app secret\", application_only_auth=True)\napi.get_token_info()\n# AccessToken(app_id='id', application='app name', user_id=None)\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u77ed\u671f\u7684\u8bbf\u95ee\u53e3\u4ee4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u521d\u59cb\u5316 Api:</p> <pre><code>api = Api(app_id=\"your app id\", app_secret=\"your app secret\", short_token=\"short-lived token\")\napi.get_token_info()\n# AccessToken(app_id='id', application='app name', user_id='token user id')\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u957f\u671f\u7684\u8bbf\u95ee\u53e3\u4ee4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u521d\u59cb\u5316 Api (\u6ce8\u610f\uff0c\u53ea\u63d0\u4f9b\u4e00\u4e2a <code>long_term_token</code>\u53c2\u6570\u5df2\u7ecf\u8db3\u4ee5\u521d\u59cb\u5316\uff0c\u5f53\u65f6\u4e3a\u4e86\u5b89\u5168\u5668\u4ef6\uff0c\u6700\u597d\u8fd8\u662f\u63d0\u4f9b\u4e00\u4e0b app \u7684\u8ba4\u8bc1\u6570\u636e):</p> <pre><code>api = Api(app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-term token\")\napi.get_token_info()\n# AccessToken(app_id='id', application='app name', user_id='token user id')\n#  \u53ea\u4f7f\u7528 ``long_term_token`` \u53c2\u6570\u65f6\uff0c\u9700\u8981\u8be5\u53e3\u4ee4\u5177\u6709 ``manage_pages`` \u7684\u6743\u9650\napi = Api(long_term_token=\"long-term token\")\n</code></pre> <p>\u4f7f\u7528\u77ed\u671f\u53e3\u4ee4\u548c\u957f\u671f\u53e3\u4ee4\u521d\u59cb\u5316\u7684\u533a\u522b\u5728\u4e8e\uff0c\u4f7f\u7528\u77ed\u671f\u53e3\u4ee4\u65f6\uff0c\u5e93\u4f1a\u81ea\u52a8\u83b7\u53d6\u5230 \u957f\u671f\u7684\u53e3\u4ee4\u3002</p> <p><code>Facebook</code> \u5e73\u53f0\u7684\u901f\u7387\u9650\u5236\u5f88\u6a21\u7cca\uff0c\u4e0e\u4f60\u7684\u5e94\u7528\u7684\u7528\u6237\u7684\u6570\u91cf\u6709\u5173\uff0c\u6240\u4ee5\u6b64\u5904\u5141\u8bb8\u81ea\u5b9a\u4e49\u4e24\u6b21\u8bf7\u6c42\u7684\u95f4\u9694\u65f6\u95f4\u3002 \u4f60\u53ef\u4ee5\u53ea\u8bbe\u7f6e\u53c2\u6570 <code>sleep_on_rate_limit</code> \u4e3a <code>True</code>, \u8fd9\u6837\u4e24\u6b21\u8bf7\u6c42\u4e4b\u95f4\u7684\u95f4\u9694\u56fa\u5b9a\u4e3a\u4e86 2 \u79d2\u3002 \u6216\u8005\u4f60\u53ef\u4ee5\u7ed9\u53c2\u6570 <code>sleep_seconds_mapping</code> \u4f20\u9012\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u65f6\u95f4\u6570\u636e\uff0c\u6bd4\u5982:</p> <pre><code>mapping = {10: 2, 20: 5, 50: 20, 70: 30}  # key is api limit reached percent and value is seconds to sleep.\napi = Api(\n    app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-term token\",\n    sleep_on_rate_limit=True, sleep_seconds_mapping=mapping\n)\n</code></pre>"},{"location":"previous-version/usage_zh/#_5","title":"\u83b7\u53d6\u6570\u636e","text":"<p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u4e00\u4e2a\u4e3b\u9875\u7684\u516c\u5f00\u6570\u636e\u3002</p> <p>\u83b7\u53d6\u5355\u4e2a\u4e3b\u9875\u7684\u516c\u5f00\u6570\u636e:</p> <pre><code>api.get_page_info(username='facebookapp')\n# Page(id='20531316728', name='Facebook', username='facebookapp')\n</code></pre> <p>\u4ec5\u901a\u8fc7\u4e00\u6b21\u8bf7\u6c42\u6765\u83b7\u53d6\u591a\u4e2a\u4e3b\u9875\u7684\u516c\u5f00\u6570\u636e(\u53c2\u6570 <code>ids</code> \u53ef\u4ee5\u662f\u4e3b\u9875 ID \u548c\u4e3b\u9875\u7528\u6237\u540d\u6df7\u7528\u7684\u5217\u8868):</p> <pre><code>api.get_pages_info(ids=[\"20531316728\", \"nba\"])\n# {'20531316728': Page(id='20531316728', name='Facebook', username='facebookapp'), 'nba': Page(id='8245623462', name='NBA', username='nba')}\n</code></pre> <p>\u5b58\u5728\u591a\u79cd\u65b9\u6cd5\u6765\u83b7\u53d6\u4e3b\u9875\u7684\u5e16\u5b50\u6570\u636e\u3002</p> <pre><code>api.get_page_feeds()\napi.get_page_posts()\napi.get_page_published_posts()\napi.get_page_tagged_posts()\n</code></pre> <p>\u4e3b\u9875 feeds \u53ef\u4ee5\u83b7\u53d6\u4e3b\u9875\u6216\u8005\u7531\u6b64\u4e3b\u9875\u4e0a\u7684\u5176\u4ed6\u4eba\u53d1\u5e03\u7684\u5e16\u5b50\u52a8\u6001(\u5305\u62ec\u72b6\u6001\u66f4\u65b0)\u548c\u94fe\u63a5:</p> <pre><code>api.get_page_feeds(page_id=\"20531316728\", count=2)\n# [Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'),\n#    Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')]\n</code></pre> <p>\u4e3b\u9875 posts \u53ea\u80fd\u83b7\u53d6\u5230\u7531\u8be5\u4e3b\u9875\u53d1\u5e03\u7684\u5e16\u5b50:</p> <pre><code>api.get_page_posts(page_id=\"20531316728\", count=2)\n# [Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'), \n#   Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')]\n</code></pre> <p>\u56e0\u4e3a\u56fe\u8c31 API \u7684\u9650\u5236. \u52a8\u6001\u3002 API \u6bcf\u5e74\u8fd4\u56de\u5927\u7ea6 600 \u4e2a\u7ecf\u6392\u540d\u7684\u5e16\u5b50\u3002</p> <p>\u6240\u4ee5\u5982\u679c\u4f60\u60f3\u8981\u83b7\u53d6\u4e3b\u9875\u7684\u6240\u6709\u5e16\u5b50\u6216\u8005\u6807\u8bb0\u8be5\u4e3b\u9875\u7684\u5e16\u5b50\u3002\u4f60\u9700\u8981\u4f7f\u7528 <code>get_page_published_posts</code> \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u4f60\u7684\u8bbf\u95ee\u53e3\u4ee4\u5e26\u6709 <code>manage_pages</code> \u7684\u6743\u9650\u3002</p> <p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u6388\u6743\u6765\u5f97\u5230\u8fd9\u6837\u7684\u8bbf\u95ee\u53e3\u4ee4\uff0c\u6309\u7167 \u624b\u52a8\u6388\u6743 \u7684\u6587\u6863\u5373\u53ef\u3002</p> <p>\u4e4b\u540e\u4f60\u53ef\u4ee5\u83b7\u53d6\u5230\u4e3b\u9875\u6240\u6709\u5e16\u5b50:</p> <pre><code>api.get_published_posts(username='facebookapp', access_token='page access token')\n# [Post...]\n</code></pre> <p>\u83b7\u53d6\u6807\u8bb0\u8be5\u4e3b\u9875\u7684\u5e16\u5b50:</p> <pre><code>api.get_tagged_posts(username='facebookapp', access_token='page access token')\n# [Post...]\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u5e16\u5b50\u7684 ID\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u6cd5\u6765\u83b7\u53d6\u5e16\u5b50\u7684\u8be6\u60c5\u6570\u636e\u3002</p> <p>\u83b7\u53d6\u5355\u4e2a\u5e16\u5b50\u7684\u6570\u636e:</p> <pre><code>api.get_post_info(post_id=\"20531316728_587455038708591\")\n# Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/')\n</code></pre> <p>\u5355\u8bf7\u6c42\u83b7\u53d6\u591a\u4e2a\u5e16\u5b50\u7684\u6570\u636e:</p> <pre><code>api.get_posts_info(ids=[\"20531316728_587455038708591\", \"20531316728_10159023836696729\"])\n# {'20531316728_587455038708591': Post(id='20531316728_587455038708591', permalink_url='https://www.facebook.com/facebookapp/videos/587455038708591/'),\n#    '20531316728_10159023836696729': Post(id='20531316728_10159023836696729', permalink_url='https://www.facebook.com/20531316728/posts/10159023836696729/')}\n</code></pre> <p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u8d44\u6e90\u5bf9\u8c61(\u5e16\u5b50\uff0c\u56fe\u7247\u7b49)\u7684 ID \u6765\u83b7\u53d6\u5bf9\u5e94\u7684\u8bc4\u8bba\u6570\u636e:</p> <pre><code>api.get_comments_by_object(object_id=\"20531316728_587455038708591\", count=2)\n# ([Comment(id='587455038708591_587460942041334', can_like=True, can_comment=True, comment_count=2, like_count=1),\n#    Comment(id='587455038708591_587464298707665', can_like=True, can_comment=True, comment_count=2, like_count=14)],\n#    CommentSummary(total_count=392, can_comment=True))\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u8bc4\u8bba\u7684 ID\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u6765\u83b7\u53d6\u8bc4\u8bba\u7684\u8be6\u60c5\u6570\u636e:</p> <p>\u83b7\u53d6\u5355\u4e2a\u8bc4\u8bba\u7684\u6570\u636e:</p> <pre><code>api.get_comment_info(comment_id=\"587455038708591_587460942041334\")\n# Comment(id='587455038708591_587460942041334', comment_count=2, like_count=1)\n</code></pre> <p>\u5355\u8bf7\u6c42\u83b7\u53d6\u591a\u4e2a\u8bc4\u8bba\u7684\u6570\u636e:</p> <pre><code>api.get_comments_info(ids=[\"587455038708591_587460942041334\", \"587455038708591_587464298707665\"])\n# {'587455038708591_587460942041334': Comment(id='587455038708591_587460942041334', comment_count=2, like_count=1),\n#  '587455038708591_587464298707665': Comment(id='587455038708591_587464298707665', comment_count=2, like_count=14)}\n</code></pre> <p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u6765\u83b7\u53d6\u4e3b\u9875\u7684\u5934\u50cf\u3002</p> <p>\u83b7\u53d6\u5355\u4e2a\u4e3b\u9875\u7684\u5934\u50cf\u6570\u636e:</p> <pre><code>api.get_picture(page_id=\"20531316728\")\n# ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/58978526_10158354585751729_7411073224387067904_o.png?_nc_cat=1&amp;_nc_oc=AQmaFO7eND-DVRoArrQLUZVDpmemw8nMPmHJWvoCyXId_MKLLHQdsS8UbTOX4oaEfeQ&amp;_nc_ht=scontent.xx&amp;oh=128f57c4dc65608993af62b562d92d84&amp;oe=5E942420', height=100, width=100)\n</code></pre> <p>\u5355\u8bf7\u6c42\u83b7\u53d6\u591a\u4e2a\u4e3b\u9875\u7684\u5934\u50cf\u6570\u636e:</p> <pre><code>api.get_pictures(ids=[\"20531316728\", \"nba\"])\n# {'20531316728': ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/58978526_10158354585751729_7411073224387067904_o.png?_nc_cat=1&amp;_nc_oc=AQmaFO7eND-DVRoArrQLUZVDpmemw8nMPmHJWvoCyXId_MKLLHQdsS8UbTOX4oaEfeQ&amp;_nc_ht=scontent.xx&amp;oh=128f57c4dc65608993af62b562d92d84&amp;oe=5E942420', height=100, width=100),\n#  'nba': ProfilePictureSource(url='https://scontent.xx.fbcdn.net/v/t1.0-1/p100x100/81204460_10158199356848463_5727214464013434880_n.jpg?_nc_cat=1&amp;_nc_oc=AQmcent57E-a-923C_VVpiX26nGqKDodImY1gsiu7h1czDmcpLHXR8D5hIh9g9Ao3wY&amp;_nc_ht=scontent.xx&amp;oh=1656771e6c11bd03147b69ee643238ba&amp;oe=5E66450C', height=100, width=100)}\n</code></pre> <p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61(\u4e3b\u9875\uff0c\u7528\u6237)\u7684ID\u83b7\u53d6\u8be5\u5bf9\u8c61\u7684\u89c6\u9891:</p> <pre><code>api.get_videos_by_object(\"ikaroskunlife\", fields=[\"id\", \"title\", \"description\"], count=None, limit=20)\n# [Video(id='969222676905304', created_time=None, description='\u51ac\u65e5'),\n#  Video(id='210174653594254', created_time=None, description='Snowing'),\n#  Video(id='674270653053120', created_time=None, description='Visible')]\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u83b7\u5f97\u4e86\u89c6\u9891\u7684ID\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u83b7\u53d6\u89c6\u9891\u66f4\u591a\u4fe1\u606f:</p> <pre><code>api.get_video_info(\"969222676905304\")\n# Video(id='969222676905304', created_time='2020-09-12T09:53:06+0000', description='\u51ac\u65e5')\napi.get_videos(ids=[\"210174653594254\", \"674270653053120\"])\n# {'210174653594254': Video(id='210174653594254', created_time='2020-03-31T08:13:14+0000', description='Snowing'),\n#  '674270653053120': Video(id='674270653053120', created_time='2019-09-02T06:13:17+0000', description='Visible')}\n</code></pre> <p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61(\u4e3b\u9875\uff0c\u7528\u6237)\u7684ID\u83b7\u53d6\u8be5\u5bf9\u8c61\u7684\u76f8\u518c:</p> <pre><code>api.get_albums_by_object(\"instagram\", count=20, limit=15)\n# [Album(id='372558296163354', created_time='2012-10-29T19:46:35+0000', name='\u65f6\u95f4\u7ebf\u7167\u7247'),\n#  Album(id='623202484432266', created_time='2014-04-12T15:28:26+0000', name='\u624b\u673a\u4e0a\u4f20')...]\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u83b7\u5f97\u4e86\u76f8\u518c\u7684ID\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u83b7\u53d6\u76f8\u518c\u66f4\u591a\u4fe1\u606f:</p> <pre><code>api.get_album_info(\"372558296163354\")\n# Album(id='372558296163354', created_time='2012-10-29T19:46:35+0000', name='\u65f6\u95f4\u7ebf\u7167\u7247')\napi.get_albums(ids=\"372558296163354,623202484432266\")\n# {'372558296163354': Album(id='372558296163354', created_time='2012-10-29T19:46:35+0000', name='\u65f6\u95f4\u7ebf\u7167\u7247'),\n#  '623202484432266': Album(id='623202484432266', created_time='2014-04-12T15:28:26+0000', name='\u624b\u673a\u4e0a\u4f20')}\n</code></pre> <p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61(\u4e3b\u9875\uff0c\u7528\u6237)\u7684ID\u83b7\u53d6\u8be5\u5bf9\u8c61\u7684\u56fe\u7247:</p> <pre><code>api.get_photos_by_object(\"372558296163354\", count=10, limit=5)\n# [Photo(id='3293405020745319', created_time='2020-09-10T19:11:01+0000', name='Roller skating = Black joy for Travis Reynolds. \ud83d\udda4\\n\\nWatch our IGTV to catch some good vibes and see his \ud83d\udd25\ud83d\udd25\ud83d\udd25 tricks. \\n\\n#ShareBlackStories\\n\\nhttps://www.instagram.com/tv/CE9xgF3jwS_/'),\n#  Photo(id='3279789248773563', created_time='2020-09-06T16:23:17+0000', name='#HelloFrom Los Glaciares National Park, Argentina \ud83d\udc4f\ud83d\udc4f\ud83d\udc4f\\n\\nhttps://www.instagram.com/p/CEzSoQNMdfH/'),\n#  Photo(id='3276650595754095', created_time='2020-09-05T16:52:54+0000', name=None)...]\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u83b7\u5f97\u4e86\u56fe\u7247\u7684ID\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u83b7\u53d6\u56fe\u7247\u66f4\u591a\u4fe1\u606f:</p> <pre><code>api.get_photo_info(\"3293405020745319\")\n# Photo(id='3293405020745319', created_time='2020-09-10T19:11:01+0000', name='Roller skating = Black joy for Travis Reynolds. \ud83d\udda4\\n\\nWatch our IGTV to catch some good vibes and see his \ud83d\udd25\ud83d\udd25\ud83d\udd25 tricks. \\n\\n#ShareBlackStories\\n\\nhttps://www.instagram.com/tv/CE9xgF3jwS_/')\napi.get_photos(ids=[\"3279789248773563\", \"3276650595754095\"])\n# {'3279789248773563': Photo(id='3279789248773563', created_time='2020-09-06T16:23:17+0000', name='#HelloFrom Los Glaciares National Park, Argentina \ud83d\udc4f\ud83d\udc4f\ud83d\udc4f\\n\\nhttps://www.instagram.com/p/CEzSoQNMdfH/'),\n# '3276650595754095': Photo(id='3276650595754095', created_time='2020-09-05T16:52:54+0000', name=None)}\n</code></pre> <p>\u540c\u6837\u7684\u65b9\u5f0f\u53ef\u4ee5\u83b7\u53d6\u5230: \u76f4\u64ad\u89c6\u9891\u6570\u636e\uff0c\u4ee5\u53ca\u76f4\u64ad\u89c6\u9891\u7684\u6d41\u6570\u636e</p>"},{"location":"previous-version/usage_zh/#instagram-graph-api","title":"Instagram Graph API","text":"<p>Instagram \u56fe\u8c31 API \u53ef\u4ee5 <code>instagram Professional accounts &lt;https://help.instagram.com/502981923235522&gt;</code>_ (\u5546\u5bb6\u548c\u521b\u4f5c\u8005) \u7684\u6570\u636e\u3002</p>"},{"location":"previous-version/usage_zh/#api_1","title":"\u521d\u59cb\u5316 Api","text":"<p>\u548c Facebook \u7684\u56fe\u8c31 API \u7684\u7c7b\u4f3c\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u6765\u521d\u59cb\u5316 Api\u3002\u4f46\u662f\u4f60\u53ea\u80fd\u4f7f\u7528\u7528\u6237\u8bbf\u95ee\u53e3\u4ee4\uff0c\u5e76\u4e14\u9700\u8981\u4f60\u7684\u5546\u52a1\u5e10\u53f7 ID\u3002</p> <p>\u5982\u679c\u4f60\u60f3\u8981\u901a\u8fc7\u6388\u6743\u6765\u83b7\u53d6\u7528\u6237\u7684\u8bbf\u95ee\u53e3\u4ee4\uff0c\u4f60\u53ef\u4ee5\u6309\u7167 \u624b\u52a8\u6388\u6743 \u6765\u521d\u59cb\u5316 api\u3002</p> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u77ed\u671f\u7684\u8bbf\u95ee\u53e3\u4ee4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u521d\u59cb\u5316 Api:</p> <pre><code>api = IgProApi(app_id=\"your app id\", app_secret=\"your app secret\", short_token=\"short-lived token\",\n               instagram_business_id=\"17841406338772941\")\napi.get_token_info()\n# AccessToken(app_id='id', application='app name', user_id=\"token user id\")\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u957f\u671f\u7684\u8bbf\u95ee\u53e3\u4ee4\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u521d\u59cb\u5316 Api (\u6ce8\u610f\uff0c\u53ea\u63d0\u4f9b\u4e00\u4e2a <code>long_term_token</code> \u53c2\u6570\u5df2\u7ecf\u8db3\u4ee5\u521d\u59cb\u5316\uff0c\u5f53\u65f6\u4e3a\u4e86\u5b89\u5168\u5668\u4ef6\uff0c\u6700\u597d\u8fd8\u662f\u63d0\u4f9b\u4e00\u4e0b app \u7684\u8ba4\u8bc1\u6570\u636e):</p> <pre><code>api = IgProApi(app_id=\"your app id\", app_secret=\"your app secret\", long_term_token=\"long-lived token\")\napi.get_token_info()\n# AccessToken(app_id='id', application='app name', user_id='token user id')\n</code></pre>"},{"location":"previous-version/usage_zh/#_6","title":"\u83b7\u53d6\u6570\u636e","text":"<p>\u5982\u679c\u4f60\u60f3\u8981\u641c\u7d22\u5176\u4ed6\u5546\u5bb6\u5e10\u53f7\u7684\u57fa\u7840\u6570\u636e\u548c\u5e16\u5b50\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u65b9\u6cd5:</p> <ul> <li>discovery_user: \u83b7\u53d6\u7528\u6237\u7684\u57fa\u7840\u6570\u636e</li> <li>discovery_user_medias: \u83b7\u53d6\u7528\u6237\u7684\u5e16\u5b50</li> </ul> <p>Note</p> <p>\u4f7f\u7528 discovery \u65b9\u6cd5\u8fdb\u884c\u641c\u7d22\u53ea\u652f\u6301\u4f7f\u7528\u7528\u6237\u540d</p> <p>\u901a\u8fc7\u5176\u4ed6\u5546\u5bb6\u7528\u6237\u7684\u7528\u6237\u540d\u6765\u83b7\u53d6\u57fa\u7840\u6570\u636e:</p> <pre><code>api.discovery_user(username=\"facebook\")\n# IgProUser(id='17841400455970028', name='Facebook', username='facebook')\n</code></pre> <p>\u901a\u8fc7\u5176\u4ed6\u5546\u5bb6\u7528\u6237\u7684\u7528\u6237\u540d\u6765\u83b7\u53d6\u5e16\u5b50\u6570\u636e:</p> <pre><code>api.discovery_user_medias(username=\"facebook\", count=2)\n# [IgProMedia(comments=None, id='17859633232647524', permalink='https://www.instagram.com/p/B6jje2UnoH8/'),\n#  IgProMedia(comments=None, id='18076151185161297', permalink='https://www.instagram.com/p/B6ji-PZH2V1/')]\n</code></pre> <p>\u83b7\u53d6\u4f60\u7684\u5e10\u53f7\u7684\u4fe1\u606f:</p> <pre><code>api.get_user_info(user_id=\"your instagram business id\")\n# IgProUser(id='17841406338772941', name='LiuKun', username='ikroskun')\n</code></pre> <p>\u83b7\u53d6\u4f60\u7684\u5e16\u5b50:</p> <pre><code>api.get_user_medias(user_id=api.instagram_business_id, count=2)\n# [IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/'),\n#  IgProMedia(comments=None, id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')]\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u5e16\u5b50\u7684 ID \u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u83b7\u53d6\u5e16\u5b50\u7684\u8be6\u60c5\u6570\u636e\u3002</p> <p>\u83b7\u53d6\u5355\u4e2a\u5e16\u5b50\u7684\u8be6\u60c5\u4fe1\u606f:</p> <pre><code>api.get_media_info(media_id=\"18075344632131157\")\n# IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/')\n</code></pre> <p>\u901a\u8fc7\u5355\u4e2a\u8bf7\u6c42\u83b7\u53d6\u591a\u4e2a\u5e16\u5b50\u7684\u8be6\u60c5\u6570\u636e:</p> <pre><code>api.get_medias_info(media_ids=[\"18075344632131157\", \"18027939643230671\"])\n# {'18075344632131157': IgProMedia(comments=None, id='18075344632131157', permalink='https://www.instagram.com/p/B38X8BzHsDi/'),\n#  '18027939643230671': IgProMedia(comments=None, id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')}\n</code></pre> <p>\u83b7\u53d6\u67d0\u4e2a\u5e16\u5b50\u7684\u8bc4\u8bba\u6570\u636e:</p> <pre><code>api.get_comments_by_media(media_id=\"17955956875141196\", count=2)\n# [IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000'),\n#  IgProComment(id='17844360649889631', timestamp='2020-01-05T05:58:42+0000')]\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u8bc4\u8bba\u7684\u7684 ID\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u6765\u83b7\u53d6\u8bc4\u8bba\u8be6\u60c5\u3002</p> <p>\u83b7\u53d6\u5355\u4e2a\u8bc4\u8bba\u7684\u8be6\u60c5:</p> <pre><code>api.get_comment_info(comment_id=\"17862949873623188\")\n# IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000')\n</code></pre> <p>\u901a\u8fc7\u5355\u4e2a\u8bf7\u6c42\u83b7\u53d6\u591a\u4e2a\u8bc4\u8bba\u7684\u8be6\u60c5:</p> <pre><code>api.get_comments_info(comment_ids=[\"17862949873623188\", \"17844360649889631\"])\n# {'17862949873623188': IgProComment(id='17862949873623188', timestamp='2020-01-05T05:58:47+0000'),\n#  '17844360649889631': IgProComment(id='17844360649889631', timestamp='2020-01-05T05:58:42+0000')}\n</code></pre> <p>\u83b7\u53d6\u67d0\u4e2a\u8bc4\u8bba\u7684\u56de\u590d:</p> <pre><code>api.get_replies_by_comment(\"17984127178281340\", count=2)\n# [IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000'),\n#  IgProReply(id='17846106427692294', timestamp='2019-10-15T07:05:17+0000')]\n</code></pre> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u8bc4\u8bba\u7684 ID\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u6cd5\u6765\u83b7\u53d6\u56de\u590d\u8be6\u60c5\u3002</p> <p>\u83b7\u53d6\u5355\u4e2a\u8bc4\u8bba\u7684\u8be6\u60c5:</p> <pre><code>api.get_reply_info(reply_id=\"18107567341036926\")\n# IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000')\n</code></pre> <p>\u901a\u8fc7\u5355\u4e2a\u8bf7\u6c42\u83b7\u53d6\u591a\u4e2a\u56de\u590d\u7684\u8be6\u60c5:</p> <pre><code>api.get_replies_info(reply_ids=[\"18107567341036926\", \"17846106427692294\"])\n# {'18107567341036926': IgProReply(id='18107567341036926', timestamp='2019-10-15T07:06:09+0000'),\n#  '17846106427692294': IgProReply(id='17846106427692294', timestamp='2019-10-15T07:05:17+0000')}\n</code></pre> <p>\u4f7f\u7528 <code>get_user_insights</code> \u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u8d26\u53f7\u7684\u6388\u6743\u6570\u636e\u3002</p> <p>\u5982\u679c\u4f60\u6709\u53e6\u4e00\u4e2a\u4e1a\u52a1\u8d26\u53f7\u7684\u6388\u6743\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a <code>user_id</code> \u548c <code>access_token</code> \u53c2\u6570\uff0c\u6765\u83b7\u53d6\u8be5\u8d26\u53f7\u7684\u6388\u6743\u6570\u636e\u3002</p> <p>\u6216\u8005\u53ea\u83b7\u53d6\u4f60\u8d26\u53f7\u7684\u6388\u6743\u6570\u636e:</p> <pre><code>api.get_user_insights(user_id=api.instagram_business_id, period=\"day\", metrics=[\"impressions\", \"reach\"])\n# [IgProInsight(name='impressions', period='day'), IgProInsight(name='reach', period='day')]\n</code></pre> <p>\u4e0e <code>get_user_insights</code> \u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a <code>user_id</code> \u548c <code>access_token</code> \u53c2\u6570\u6765\u83b7\u53d6\u5176\u4ed6\u4e1a\u52a1\u5e10\u53f7\u7684\u5e16\u5b50\u6388\u6743\u6570\u636e\u3002 \u6216\u8005\u83b7\u53d6\u4f60\u81ea\u5df1\u7684\u5e16\u5b50\u7684\u6388\u6743\u6570\u636e:</p> <pre><code>api.get_media_insights(media_id=\"media_id\", metrics=[\"engagement\", \"impressions\"])\n# [IgProInsight(name='engagement', period='lifetime'), IgProInsight(name='impressions', period='lifetime')]\n</code></pre> <p>\u641c\u7d22\u6807\u7b7e\u7684ID:</p> <pre><code>api.search_hashtag(q=\"love\")\n# [IgProHashtag(id='17843826142012701', name=None)]\n</code></pre> <p>\u83b7\u53d6\u6807\u7b7e\u7684\u4fe1\u606f:</p> <pre><code>api.get_hashtag_info(hashtag_id=\"17843826142012701\")\n# IgProHashtag(id='17843826142012701', name='love')\n</code></pre> <p>\u83b7\u53d6\u4f7f\u7528\u8be5\u6807\u7b7e\u7684\u6392\u540d\u8f83\u9ad8\u7684\u5e16\u5b50:</p> <pre><code>api.get_hashtag_top_medias(hashtag_id=\"17843826142012701\", count=5)\n# [IgProMedia(comments=None, id='18086291068155608', permalink='https://www.instagram.com/p/B8ielBPpHaw/'),\n#  IgProMedia(comments=None, id='17935250359346228', permalink='https://www.instagram.com/p/B8icUmwoF0Y/'),\n#  IgProMedia(comments=None, id='17847031435934181', permalink='https://www.instagram.com/p/B8icycxKEn-/'),\n#  IgProMedia(comments=None, id='18000940699302502', permalink='https://www.instagram.com/p/B8ieNN7Cv6S/'),\n#  IgProMedia(comments=None, id='18025516372248793', permalink='https://www.instagram.com/p/B8iduQJgSyO/')]\n</code></pre> <p>\u83b7\u53d6\u4f7f\u7528\u8be5\u6807\u7b7e\u7684\u6700\u8fd1\u7684\u5e16\u5b50:</p> <pre><code>api.get_hashtag_recent_medias(hashtag_id=\"17843826142012701\", count=5)\n# [IgProMedia(comments=None, id='18128248021002097', permalink='https://www.instagram.com/p/B8ifnoWA5Ru/'),\n#  IgProMedia(comments=None, id='18104579776105272', permalink='https://www.instagram.com/p/B8ifwfsgBw2/'),\n#  IgProMedia(comments=None, id='17898846532442427', permalink='https://www.instagram.com/p/B8ifwZ4ltqP/'),\n#  IgProMedia(comments=None, id='17891698510462453', permalink='https://www.instagram.com/p/B8ifwepgf_E/'),\n#  IgProMedia(comments=None, id='17883544606492965', permalink='https://www.instagram.com/p/B8ifwabgiPf/')]\n</code></pre> <p>\u5982\u679c\u4f60\u6709\u5176\u4ed6\u4e1a\u52a1\u53f7\u7684\u6388\u6743\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a <code>user_id</code> \u548c <code>access_token</code> \u6765\u83b7\u53d6\u5230\u8be5\u8d26\u53f7\u7684\u6807\u7b7e\u641c\u7d22\u8bb0\u5f55\uff0c \u6216\u8005\u83b7\u53d6\u4f60\u81ea\u5df1\u7684\u641c\u7d22\u8bb0\u5f55:</p> <pre><code>api.get_user_recently_searched_hashtags(user_id=\"17841406338772941\")\n# [IgProHashtag(id='17843826142012701', name='love'), IgProHashtag(id='17841562447105233', name='loveyou')]\n</code></pre> <p>\u83b7\u53d6\u6807\u8bb0\u4e86\u7528\u6237\u7684\u5e16\u5b50\u3002\u5982\u679c\u4f60\u6709\u5176\u4ed6\u4e1a\u52a1\u8d26\u53f7\u7684\u6388\u6743\uff0c\u53ef\u4ee5\u6307\u5b9a <code>user_id</code> \u548c <code>access_token</code> \u6765\u83b7\u53d6\u5230\u6807\u8bb0\u8be5\u8d26\u53f7\u7684\u5e16\u6587\u3002 \u6216\u8005\u83b7\u53d6\u6807\u8bb0\u4f60\u81ea\u5df1\u8d26\u53f7\u7684\u5e16\u5b50:</p> <pre><code>medias = api.get_tagged_user_medias(user_id=api.instagram_business_id, count=2, limit=5)\n# [IgProMedia(id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/'),\n#  IgProMedia(id='17846368219941692', permalink='https://www.instagram.com/p/B8gQCApHMT-/')]\n</code></pre> <p>\u83b7\u53d6\u63d0\u5230\u4e86\u4f60\u7684\u8bc4\u8bba\u7684\u8be6\u60c5\u4fe1\u606f:</p> <pre><code>api.get_mentioned_comment_info(user_id=api.instagram_business_id, comment_id=\"17892250648466172\")\n# IgProComment(id='17892250648466172', timestamp='2020-02-24T09:15:16+0000')\n</code></pre> <p>\u83b7\u53d6\u63d0\u5230\u4e86\u4f60\u7684\u5e16\u5b50\u7684\u8be6\u60c5\u4fe1\u606f:</p> <pre><code>api.get_mentioned_media_info(user_id=api.instagram_business_id, media_id=\"18027939643230671\")\n# IgProMedia(id='18027939643230671', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')\n</code></pre>"},{"location":"previous-version/usage_zh/#instagram-basic-api","title":"Instagram Basic API","text":"<p>Instagram \u57fa\u672c\u663e\u793a API \u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u4efb\u4f55\u7c7b\u578b\u7684 Instagram \u8d26\u6237\uff0c\u4f46\u662f\u4ec5\u4ec5\u63d0\u4f9b\u5bf9\u57fa\u672c\u6570\u636e\u7684\u8bbf\u95ee\u6743\u9650\u3002</p> <p>\u4f7f\u7528\u8be5 API \u65f6\uff0c\u4f60\u9700\u8981\u9996\u5148\u8fdb\u884c\u6388\u6743\uff0c\u83b7\u53d6\u62e5\u6709\u8bbf\u95ee\u6570\u636e\u7684\u6743\u9650\u7684\u8bbf\u95ee\u53e3\u4ee4\u3002</p> <p>\u6240\u6709\u7684\u6587\u6863\u4f60\u53ef\u4ee5\u4f60\u53ef\u4ee5\u8bbf\u95ee \u57fa\u672c\u663e\u793a API.</p>"},{"location":"previous-version/usage_zh/#api_2","title":"\u521d\u59cb\u5316 Api","text":"<p>\u73b0\u5728\u63d0\u4f9b\u4e09\u79cd\u65b9\u5f0f\u521d\u59cb\u5316 Api \u5b9e\u4f8b\u3002</p> <p>\u5982\u679c\u4f60\u5df2\u7ecf\u62e5\u6709\u957f\u6548\u7684\u8bbf\u95ee\u53e3\u4ee4\u3002\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8be5\u8bbf\u95ee\u53e3\u4ee4\u8fdb\u884c\u521d\u59cb\u5316:</p> <pre><code>from pyfacebook import IgBasicApi\n\napi = IgBasicApi(long_term_token=\"token\")\n</code></pre> <p>\u5982\u679c\u4f60\u6709\u77ed\u6548\u7684\u8bbf\u95ee\u53e3\u4ee4\uff0c\u4f60\u9700\u8981\u63d0\u4f9b\u4f60\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u5bc6\u94a5\uff0c\u7528\u4ee5\u4ea4\u6362\u5230\u957f\u6548\u7684\u8bbf\u95ee\u53e3\u4ee4:</p> <pre><code>api = IgBasicApi(app_id=\"app id\", app_secret=\"app secret\", short_token=\"token\")\n</code></pre> <p>\u5982\u679c\u4f60\u53ea\u60f3\u8981\u4f7f\u7528\u5e94\u7528\u5bc6\u94a5\u521d\u59cb\u5316 Api\uff0c\u7136\u540e\u4ea4\u7531\u7528\u6237\u624b\u52a8\u8fdb\u884c\u6388\u6743\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u6388\u6743\u6d41\u7a0b:</p> <pre><code>api = IgBasicApi(app_id=\"app id\", app_secret=\"app secret\", initial_access_token=False)\napi.get_authorization_url()\n# ('https://api.instagram.com/oauth/authorize?response_type=code&amp;client_id=app+id&amp;redirect_uri=https%3A%2F%2Flocalhost%2F&amp;scope=user_profile+user_media&amp;state=PyFacebook', 'PyFacebook')\n# give permission and copy the redirect full url.\napi.exchange_access_token(response=\"the full url\")\n</code></pre>"},{"location":"previous-version/usage_zh/#_7","title":"\u6570\u636e\u83b7\u53d6","text":"<p>\u4f60\u53ef\u4ee5\u83b7\u53d6\u7528\u6237\u7684\u57fa\u7840\u4fe1\u606f:</p> <pre><code>api.get_user_info()\n# IgBasicUser(id='17841406338772941', username='ikroskun')\n</code></pre> <p>\u4f60\u53ef\u4ee5\u83b7\u53d6\u7528\u6237\u7684\u5e16\u5b50\u4fe1\u606f:</p> <pre><code>api.get_user_medias()\n# [IgBasicMedia(id='17846368219941692', media_type='IMAGE', permalink='https://www.instagram.com/p/B8gQCApHMT-/'),\n#  IgBasicMedia(id='17970645226046242', media_type='IMAGE', permalink='https://www.instagram.com/p/Bme0cU1giOH/')]\n</code></pre> <p>\u4f60\u53ef\u4ee5\u83b7\u53d6\u5f53\u4e2a\u5e16\u5b50\u7684\u4fe1\u606f:</p> <pre><code>api.get_media_info(media_id=\"18027939643230671\")\n# IgBasicMedia(id='18027939643230671', media_type='CAROUSEL_ALBUM', permalink='https://www.instagram.com/p/B38Xyp6nqsS/')\n</code></pre>"},{"location":"previous-version/usage_zh/#todo","title":"TODO","text":""},{"location":"previous-version/usage_zh/#_8","title":"\u5f53\u524d\u7684\u529f\u80fd","text":"<p>Facebook\uff1a</p> <ul> <li>\u4e3b\u9875\u4fe1\u606f</li> <li>\u4e3b\u9875\u56fe\u7247\u4fe1\u606f</li> <li>\u5e16\u5b50\u6570\u636e</li> <li>\u8bc4\u8bba\u6570\u636e</li> <li>\u89c6\u9891\u6570\u636e</li> <li>\u76f8\u518c\u6570\u636e</li> <li>\u56fe\u7247\u6570\u636e</li> </ul> <p>Instagram\uff1a</p> <ul> <li>\u641c\u7d22\u5176\u4ed6\u4e1a\u52a1\u4e3b\u9875\u7684\u57fa\u7840\u4fe1\u606f\u548c\u5e16\u5b50</li> <li>\u83b7\u53d6\u6388\u6743\u4e1a\u52a1\u4e3b\u9875\u7684\u57fa\u7840\u4fe1\u606f</li> <li>\u83b7\u53d6\u6388\u6743\u4e1a\u52a1\u4e3b\u9875\u7684\u5e16\u5b50\u4fe1\u606f</li> <li>\u83b7\u53d6\u6388\u6743\u4e1a\u52a1\u4e3b\u9875\u7684\u5e16\u5b50\u8bc4\u8bba\u6570\u636e</li> <li>\u83b7\u53d6\u6388\u6743\u4e1a\u52a1\u4e3b\u9875\u7684\u8bc4\u8bba\u7684\u56de\u590d\u6570\u636e</li> <li>\u83b7\u53d6\u6388\u6743\u4e1a\u52a1\u4e3b\u9875\u7528\u6237\u7684 Insights \u6570\u636e</li> <li>\u83b7\u53d6\u6388\u6743\u4e1a\u52a1\u4e3b\u9875\u5e16\u5b50\u7684 Insights \u6570\u636e</li> <li>\u641c\u7d22\u6807\u7b7e ID</li> <li>\u83b7\u53d6\u6807\u7b7e\u4fe1\u606f</li> <li>\u83b7\u53d6\u6807\u7b7e\u4e0b\u6392\u540d\u9760\u524d\u7684\u5e16\u5b50</li> <li>\u83b7\u53d6\u6807\u7b7e\u4e0b\u6700\u8fd1\u7684\u5e16\u5b50</li> <li>\u83b7\u53d6\u6388\u6743\u4e1a\u52a1\u4e3b\u9875\u7684\u6807\u7b7e\u641c\u7d22\u8bb0\u5f55</li> <li>\u83b7\u53d6\u6807\u8bb0\u4e86\u7528\u6237\u7684\u5e16\u6587</li> <li>\u83b7\u53d6\u63d0\u5230\u4e86\u7528\u6237\u7684\u8bc4\u8bba\u4fe1\u606f</li> <li>\u83b7\u53d6\u63d0\u5230\u4e86\u7528\u6237\u7684\u5e16\u5b50\u4fe1\u606f</li> </ul> <p>Instagram \u57fa\u7840\u663e\u793a API:</p> <ul> <li>\u83b7\u53d6\u7528\u6237\u4fe1\u606f</li> <li>\u83b7\u53d6\u7684\u7528\u6237\u7684\u5e16\u5b50</li> <li>\u83b7\u53d6\u5e16\u5b50\u7684\u8be6\u60c5</li> </ul>"},{"location":"previous-version/usage_zh/#_9","title":"\u5f85\u505a","text":"<ul> <li>\u53d1\u5e03\u5e16\u5b50</li> </ul>"},{"location":"usage/graph-api/","title":"Graph API","text":""},{"location":"usage/graph-api/#introduction","title":"Introduction","text":"<p>This library provides a simpler service to help developers access Facebook's Graph API.</p> <p>Here, we will help to use base class <code>GraphAPI</code> to get data from Facebook.</p>"},{"location":"usage/graph-api/#how-to-use","title":"How to use","text":""},{"location":"usage/graph-api/#initial-api","title":"Initial API","text":"<p>Once you have access token, you can use it to initial the <code>GraphAPI</code> class.</p> <p>As for the Security docs. You may need provide your app credential to generate <code>appsecret_proof</code> to verify Graph API calls.</p> <pre><code>from pyfacebook import GraphAPI\n\napi = GraphAPI(\n    app_id=\"Your app id\",\n    app_secret=\"Your app secret\",\n    access_token=\"Your access token\",\n)\n</code></pre> <p>The access token can be <code>User Access Token</code> , <code>App Access Token</code> or <code>Page Access Token</code>, and this depending on the data type what you need.</p> <p>After initial API. Now we can access facebook api with this API.</p>"},{"location":"usage/graph-api/#methods","title":"Methods","text":"<p>You can get data of an object, such as page,post,photo and so on.</p> <pre><code>api.get_object(object_id=\"108824017345866\")\n# {'name': 'Meta', 'id': '108824017345866'}\n</code></pre> <p>You can get the data of some objects.</p> <pre><code>api.get_objects(ids=\"108824017345866,20531316728\")\n# {'108824017345866': {'name': 'Meta', 'id': '108824017345866'}, '20531316728': {'name': 'Facebook App', 'id': '20531316728'}}\n</code></pre> <p>If you want to get data for an object's edge. For example, a User node can have photos connected to it, and a Photo node can have comments connected to it.</p> <pre><code>api.get_connection(object_id=\"20531316728\", connection=\"posts\")\n# {'data': [{'created_time': '2021-11-26T20:01:40+0000', 'message': \"Do Black Friday right with the #BuyBlack Friday Show! For the finale, host Elaine Welteroth will be talking with Sir Darius Brown, the owner of Beaux and Paws. We'll also have special guests D-Nice, Iddris Sandu., and Jaden Smith! Join this fun shop-a-thon in partnership with Meta for Business \\n\\nShop directly on [Beaux and Paws] Facebook page so you can get your pet looking proper.  fb.me/buyblackfri\", 'story': 'Facebook App was live.', 'id': '20531316728_3789869301238646'}], 'paging': {'cursors': {'before': 'before', 'after': 'after'}, 'next': 'https://graph.facebook.com/v12.0/20531316728/posts?access_token=access_token&amp;limit=1&amp;after=after'}}\n</code></pre> <p>If you want to get all data for an object's edge. Auto paging inside.</p> <pre><code>api.get_full_connections(object_id=\"20531316728\", connection=\"posts\")\n# {'data': [{'created_time': '2021-11-26T20:01:40+0000', 'message': \"Do Black Friday right with the #BuyBlack Friday Show! For the finale, host Elaine Welteroth will be talking with Sir Darius Brown, the owner of Beaux and Paws. We'll also have special guests D-Nice, Iddris Sandu., and Jaden Smith! Join this fun shop-a-thon in partnership with Meta for Business \\n\\nShop directly on [Beaux and Paws] Facebook page so you can get your pet looking proper.  fb.me/buyblackfri\", 'story': 'Facebook App was live.', 'id': '20531316728_3789869301238646'}], 'paging': {'cursors': {'before': 'before', 'after': 'after'}, 'next': 'https://graph.facebook.com/v12.0/20531316728/posts?access_token=access_token&amp;limit=1&amp;after=after'}}\n</code></pre> <p>If you have permissions to publish data. you can use <code>post</code> to create data.</p> <pre><code>api.post_object(object_id=\"2121008874780932_404879271158877\", connection=\"comments\",\n                data={\"message\": \"Comment by the api\"})\n# {'id': '404879271158877_405046241142180'}\n</code></pre> <p>If you have permissions to delete data.</p> <pre><code>api.delete_object(object_id=\"404879271158877_405046241142180\")\n# {'success': True}\n</code></pre>"},{"location":"usage/server-send-events/","title":"Server-Sent Events","text":""},{"location":"usage/server-send-events/#introduction","title":"Introduction","text":"<p>Server-Sent Events allows you to receive real-time updates for live video comments and reactions. It uses the Server-Sent Events (SSE) web standard to send real-time, continuous data streams to browser clients, once an initial client connection has been established.</p> <p>More detail you can see docs.</p> <p>Here, we give a simple example to show how to implement it by this library.</p>"},{"location":"usage/server-send-events/#how-to-use","title":"How to use","text":""},{"location":"usage/server-send-events/#custom-data-handler","title":"Custom data handler","text":"<p>You need override <code>on_data</code> method to handle the data.</p> <p>As follows, we just print the real data from facebook.</p> <pre><code>import json\n\nfrom pyfacebook import ServerSentEventAPI\n\nclass MyEvent(ServerSentEventAPI):\n    def on_data(self, data):\n        raw_data: str = data.decode()\n\n        data = json.loads(raw_data[5:])\n        print(f\"Comment Data: {data}\")\n</code></pre>"},{"location":"usage/server-send-events/#connect-the-server","title":"Connect the server","text":"<p>Then you can connect the facebook server to get pushed data.</p> <pre><code>event_api = MyEvent(access_token=\"Your access token\")\nevent_api.live_comments(\n    live_video_id=\"ID for the live video\",\n    fields=\"from{id,name},message\"\n)\n\n# output\n# Comment Data: {'id': '611384697233703_2059142704258615', 'created_time': '2022-08-31T10:03:00+0000', 'from': {'id': '100621042235323', 'name': 'HeyJoklena'}, 'message': 'hello sse', 'object': {'description': 'section 1, 1, 2', 'updated_time': '2022-08-31T10:03:00+0000', 'id': '611384697233703'}}\n# Comment Data: {'id': '611384697233703_1165171867677765', 'created_time': '2022-08-31T10:03:29+0000', 'from': {'id': '100621042235323', 'name': 'HeyJoklena'}, 'message': 'sse is nice', 'object': {'description': 'section 1, 1, 2', 'updated_time': '2022-08-31T10:03:00+0000', 'id': '611384697233703'}}\n</code></pre> <p>Now if the live video has new comment, you will see the comment output.</p>"}]}